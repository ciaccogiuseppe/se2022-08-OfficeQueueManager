{
  "stats": {
    "suites": 3,
    "tests": 22,
    "passes": 11,
    "pending": 3,
    "failures": 8,
    "start": "2022-10-19T17:58:11.039Z",
    "end": "2022-10-19T17:58:11.260Z",
    "duration": 221,
    "testsRegistered": 22,
    "passPercent": 57.89473684210527,
    "pendingPercent": 13.636363636363635,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a889718b-bd69-465c-9519-d64e8e87a2a3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
          "title": "test CounterAPI",
          "fullFile": "/Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js",
          "file": "/test/testCounterAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST/api/counter",
              "fullTitle": "test CounterAPI POST/api/counter",
              "timedOut": false,
              "duration": 36,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/counter')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 422 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 422 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js:43:33\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test/testCounterAPI.js:40:9)",
                "diff": "- 401\n+ 422\n"
              },
              "uuid": "72b76119-1ec7-4cc5-a4eb-8df4c38a3038",
              "parentUUID": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST/api/counter",
              "fullTitle": "test CounterAPI POST/api/counter",
              "timedOut": false,
              "duration": 6,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/counter')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 422 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 422 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js:43:33\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test/testCounterAPI.js:40:9)",
                "diff": "- 401\n+ 422\n"
              },
              "uuid": "60d5ba0d-ec0b-4adb-ab8d-18c7591a222d",
              "parentUUID": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST/api/counter",
              "fullTitle": "test CounterAPI POST/api/counter",
              "timedOut": false,
              "duration": 4,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/counter')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 404 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 404 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js:43:33\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test/testCounterAPI.js:40:9)",
                "diff": "- 401\n+ 404\n"
              },
              "uuid": "a3b5b770-1e1d-48f5-8bba-1f91c6af1e00",
              "parentUUID": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST/api/counter",
              "fullTitle": "test CounterAPI POST/api/counter",
              "timedOut": false,
              "duration": 4,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/counter')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 201 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 201 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js:43:33\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test/testCounterAPI.js:40:9)",
                "diff": "- 401\n+ 201\n"
              },
              "uuid": "2327aa87-853c-4ab4-9195-9af983a188c0",
              "parentUUID": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET/api/counters",
              "fullTitle": "test CounterAPI GET/api/counters",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await agent.get('/api/counters')\n            .then(function(res) {\n                res.should.have.status(expectedHTTPstatus);\n                if(expectedData.length != 0){\n                    for (let i = 0; i < expectedData.length; i++) {\n                        res.body[i].ID_Counter.should.equal(expectedData[i].ID_Counter);\n                        res.body[i].ID_Manager.should.equal(expectedData[i].ID_Manager);\n                    }\n                } else {\n                    res.body.length.should.equal(expectedData.length);\n                }\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js:16:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test/testCounterAPI.js:14:9)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "c17a6a38-e3fd-4af6-9cb7-13a1fb3244d7",
              "parentUUID": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE/api/counters/:id",
              "fullTitle": "test CounterAPI DELETE/api/counters/:id",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await agent.delete('/api/counters/'+id)\n            .then(function(res) {\n                res.should.have.status(expectedHTTPStatus);\n            })",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 422 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 422 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js:33:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test/testCounterAPI.js:31:9)",
                "diff": "- 401\n+ 422\n"
              },
              "uuid": "a5556428-d0b6-444a-8ed4-be8e75be30df",
              "parentUUID": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE/api/counters/:id",
              "fullTitle": "test CounterAPI DELETE/api/counters/:id",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await agent.delete('/api/counters/'+id)\n            .then(function(res) {\n                res.should.have.status(expectedHTTPStatus);\n            })",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 204 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 204 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testCounterAPI.js:33:41\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Context.<anonymous> (test/testCounterAPI.js:31:9)",
                "diff": "- 401\n+ 204\n"
              },
              "uuid": "4c383d06-5f63-4c79-a22a-0f4c9216fa43",
              "parentUUID": "7992fbb6-fb71-4360-a5a3-e00c0bb33cec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "72b76119-1ec7-4cc5-a4eb-8df4c38a3038",
            "60d5ba0d-ec0b-4adb-ab8d-18c7591a222d",
            "a3b5b770-1e1d-48f5-8bba-1f91c6af1e00",
            "2327aa87-853c-4ab4-9195-9af983a188c0",
            "c17a6a38-e3fd-4af6-9cb7-13a1fb3244d7",
            "a5556428-d0b6-444a-8ed4-be8e75be30df",
            "4c383d06-5f63-4c79-a22a-0f4c9216fa43"
          ],
          "pending": [],
          "skipped": [],
          "duration": 61,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
          "title": "Job APIs",
          "fullFile": "/Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testJobAPI.js",
          "file": "/test/testJobAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login",
              "fullTitle": "Job APIs login",
              "timedOut": false,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    function onError() {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      process.removeListener('uncaughtException', onError);\n    }\n    process.addListener('uncaughtException', onError);\n    try {\n      fn.call(context, function(err) {\n        if (err) {\n          onError();\n          done(err);\n        } else {\n          process.removeListener('uncaughtException', onError);\n          done(null);\n        }\n      });\n    } catch(ex) {\n      onError();\n      throw ex;\n    }",
              "err": {},
              "uuid": "1eca07dd-0873-449b-bf17-1855ecc26da3",
              "parentUUID": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "insert job authenticated",
              "fullTitle": "Job APIs insert job authenticated",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    function onError() {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      process.removeListener('uncaughtException', onError);\n    }\n    process.addListener('uncaughtException', onError);\n    try {\n      fn.call(context, function(err) {\n        if (err) {\n          onError();\n          done(err);\n        } else {\n          process.removeListener('uncaughtException', onError);\n          done(null);\n        }\n      });\n    } catch(ex) {\n      onError();\n      throw ex;\n    }",
              "err": {},
              "uuid": "f2525797-1e54-4f29-815e-34b17436cf8a",
              "parentUUID": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error: invalid value during the insert ",
              "fullTitle": "Job APIs Error: invalid value during the insert ",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    function onError() {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      process.removeListener('uncaughtException', onError);\n    }\n    process.addListener('uncaughtException', onError);\n    try {\n      fn.call(context, function(err) {\n        if (err) {\n          onError();\n          done(err);\n        } else {\n          process.removeListener('uncaughtException', onError);\n          done(null);\n        }\n      });\n    } catch(ex) {\n      onError();\n      throw ex;\n    }",
              "err": {},
              "uuid": "4d11c3ac-dc9c-4ebc-b0a3-230801595548",
              "parentUUID": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET all jobs",
              "fullTitle": "Job APIs GET all jobs",
              "timedOut": false,
              "duration": 4,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var context = this;\n    function onError() {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      process.removeListener('uncaughtException', onError);\n    }\n    process.addListener('uncaughtException', onError);\n    try {\n      fn.call(context, function(err) {\n        if (err) {\n          onError();\n          done(err);\n        } else {\n          process.removeListener('uncaughtException', onError);\n          done(null);\n        }\n      });\n    } catch(ex) {\n      onError();\n      throw ex;\n    }",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testJobAPI.js:60:33\n    at Test.Request.callback (node_modules/chai-http/node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/node_modules/chai-http/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/chai-http/node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at IncomingMessage.emit (node:events:532:35)\n    at endReadableNT (node:internal/streams/readable:1346:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "6b03131f-4760-4c93-bc79-e5723fcb7510",
              "parentUUID": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE a job with a specific id",
              "fullTitle": "Job APIs DELETE a job with a specific id",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "var context = this;\n    function onError() {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      process.removeListener('uncaughtException', onError);\n    }\n    process.addListener('uncaughtException', onError);\n    try {\n      fn.call(context, function(err) {\n        if (err) {\n          onError();\n          done(err);\n        } else {\n          process.removeListener('uncaughtException', onError);\n          done(null);\n        }\n      });\n    } catch(ex) {\n      onError();\n      throw ex;\n    }",
              "err": {},
              "uuid": "b8e4ad23-5f14-4ca4-8c7b-0232d3dd2d67",
              "parentUUID": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error: invalid value of the id during DELETE",
              "fullTitle": "Job APIs Error: invalid value of the id during DELETE",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "var context = this;\n    function onError() {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      process.removeListener('uncaughtException', onError);\n    }\n    process.addListener('uncaughtException', onError);\n    try {\n      fn.call(context, function(err) {\n        if (err) {\n          onError();\n          done(err);\n        } else {\n          process.removeListener('uncaughtException', onError);\n          done(null);\n        }\n      });\n    } catch(ex) {\n      onError();\n      throw ex;\n    }",
              "err": {},
              "uuid": "f587f156-a9fd-4418-9b4f-caf54508f2cd",
              "parentUUID": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET all jobs",
              "fullTitle": "Job APIs GET all jobs",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "var context = this;\n    function onError() {\n      markRemainingTestsAndSubSuitesAsPending(context.test);\n      process.removeListener('uncaughtException', onError);\n    }\n    process.addListener('uncaughtException', onError);\n    try {\n      fn.call(context, function(err) {\n        if (err) {\n          onError();\n          done(err);\n        } else {\n          process.removeListener('uncaughtException', onError);\n          done(null);\n        }\n      });\n    } catch(ex) {\n      onError();\n      throw ex;\n    }",
              "err": {},
              "uuid": "45418572-179b-461d-83ee-37c0114c1f83",
              "parentUUID": "e003ecde-e65d-4300-a9c9-5e39b9a9497b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1eca07dd-0873-449b-bf17-1855ecc26da3",
            "f2525797-1e54-4f29-815e-34b17436cf8a",
            "4d11c3ac-dc9c-4ebc-b0a3-230801595548"
          ],
          "failures": [
            "6b03131f-4760-4c93-bc79-e5723fcb7510"
          ],
          "pending": [
            "b8e4ad23-5f14-4ca4-8c7b-0232d3dd2d67",
            "f587f156-a9fd-4418-9b4f-caf54508f2cd",
            "45418572-179b-461d-83ee-37c0114c1f83"
          ],
          "skipped": [],
          "duration": 100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
          "title": "test TicketAPI",
          "fullFile": "/Users/antonellocaputo/SWII_Git/se2022-08-OfficeQueueManager/server/test/testTicketsAPI.js",
          "file": "/test/testTicketsAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST/api/ticket",
              "fullTitle": "test TicketAPI POST/api/ticket",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/ticket')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {},
              "uuid": "360a1a79-4305-46b2-bc51-b78c19d03848",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST/api/ticket",
              "fullTitle": "test TicketAPI POST/api/ticket",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/ticket')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {},
              "uuid": "6dd0f8bd-11cf-4ac5-98c6-c6b8bd611279",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST/api/ticket",
              "fullTitle": "test TicketAPI POST/api/ticket",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/ticket')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {},
              "uuid": "2124093f-9cf4-4f28-b9b2-04452df6b415",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST/api/ticket",
              "fullTitle": "test TicketAPI POST/api/ticket",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/ticket')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {},
              "uuid": "06c87d52-8c6f-4c32-9921-e10df726d9da",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST/api/ticket",
              "fullTitle": "test TicketAPI POST/api/ticket",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.post('/api/ticket')\n    .send(expectedData)\n    .then(function(res) {\n        res.should.have.status(expectedHTTPStatus);\n    });",
              "err": {},
              "uuid": "579c0a00-6f0d-4074-8129-b0674a089f96",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET/api/ticket/:serviceId",
              "fullTitle": "test TicketAPI GET/api/ticket/:serviceId",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.get('/api/ticket/'+serviceid)\n            .then(function(res) {\n                res.should.have.status(expectedHTTPstatus);\n                if(expectedData.length != 0){\n                    for (let i = 0; i < expectedData.length; i++) {\n                        res.body[i].time.should.equal(expectedData[i].time);\n                    }\n                } else {\n                    res.body.length.should.equal(expectedData.length);\n                }\n            });",
              "err": {},
              "uuid": "9760a462-3375-41e8-8fd9-62ab098e499e",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET/api/ticket/:serviceId",
              "fullTitle": "test TicketAPI GET/api/ticket/:serviceId",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.get('/api/ticket/'+serviceid)\n            .then(function(res) {\n                res.should.have.status(expectedHTTPstatus);\n                if(expectedData.length != 0){\n                    for (let i = 0; i < expectedData.length; i++) {\n                        res.body[i].time.should.equal(expectedData[i].time);\n                    }\n                } else {\n                    res.body.length.should.equal(expectedData.length);\n                }\n            });",
              "err": {},
              "uuid": "4b457a65-7f83-41e1-a9d6-a5edf9c3ad20",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET/api/ticket/:serviceId",
              "fullTitle": "test TicketAPI GET/api/ticket/:serviceId",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await agent.get('/api/ticket/'+serviceid)\n            .then(function(res) {\n                res.should.have.status(expectedHTTPstatus);\n                if(expectedData.length != 0){\n                    for (let i = 0; i < expectedData.length; i++) {\n                        res.body[i].time.should.equal(expectedData[i].time);\n                    }\n                } else {\n                    res.body.length.should.equal(expectedData.length);\n                }\n            });",
              "err": {},
              "uuid": "fe6f5620-3fc3-4fa4-9803-e6dd833ef324",
              "parentUUID": "b4ff8a7e-76ab-4f1d-badd-f7be1a53fe00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "360a1a79-4305-46b2-bc51-b78c19d03848",
            "6dd0f8bd-11cf-4ac5-98c6-c6b8bd611279",
            "2124093f-9cf4-4f28-b9b2-04452df6b415",
            "06c87d52-8c6f-4c32-9921-e10df726d9da",
            "579c0a00-6f0d-4074-8129-b0674a089f96",
            "9760a462-3375-41e8-8fd9-62ab098e499e",
            "4b457a65-7f83-41e1-a9d6-a5edf9c3ad20",
            "fe6f5620-3fc3-4fa4-9803-e6dd833ef324"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}